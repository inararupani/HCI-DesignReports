:coffeescript
  #aws_wss = "ws://162.243.120.86:3010"
  aws_wss = "ws://162.243.120.86:3010"
  window.socket = undefined;
  # socketConnection = new WebSocket(aws_wss, ["http"])
   
  start_socket = () -> 
    socketConnection = new WebSocket(aws_wss, ["http"])
    console.log("ATTEMPTING CONNECTION ON ws://162.243.120.86:3010")
    
    socketConnection.onopen = (event) ->
    # $('#connect').on 'click',(event) ->
      alertify.notify "Connecting to socket"
      $('#connect').addClass("disabled")
      $('#connect').addClass("green")
      $('#connect').removeClass("red")
        # window.socket = true
      
    socketConnection.onclose = (event) ->
      # $('#connect').on 'click',(event) ->
      alertify.notify "Leaving the socket"
      $('#connect').removeClass("disabled")
      $('#connect').removeClass("green")
      $('#connect').addClass("red")
      
    socketConnection.onmessage = (event) ->
      data = JSON.parse(event.data)
      console.log("Server >>", data)
        
    socketConnection.onerror = (event) ->
      alertify.error "Error"
    
    return socketConnection
      
  $ ->
    
    alertify.notify "Hello World"
    $("form").submit (event)->
      event.preventDefault()
    
    # start_socket function enabled as connect button is pressed
    $('#connect').on 'click', (event) ->
      window.socket = start_socket()
      console.log ("WEBSOCKET OPEN")
    
    $('#directional-pad button').on 'click', (event) ->
      requestObj = 
        action: "move"
        remote_id: $('[name=remote_id]').val()
        color_id: $('[name=color_id]').val()
        direction: $(this).attr("name")
      #console.log('direction pad is used', $(this).attr("name")
      
      #validation
      if window.socket == undefined or window.socket.readyState != WebSocket.OPEN
        alertify.error "Socket does not exist. Connect first"
      if $('[name=remote_id]').val() == null or $('[name=remote_id]').val() == ""
        alertify.notify "Please specify a remote ID"
      else
      #send the object
        ClientReq = JSON.stringify(requestObj) 
        RequestString = 'Server << ' + ClientReq
        console.log(RequestString)
        window.socket.send(ClientReq)

    
/ DO NOT MODIFY CODE BELOW THIS LINE
.mobile
  .hero
    %form#remote.ui.form
      %input{name: "action", type:"hidden", value:"move"}
      .field
        .ui.input.action.fluid
          %input{name: "remote_id", type:"number", placeholder: "ID"}
          %button.ui.button#connect Connect
        .field
          %input.ui.input{name: "color_id", type:"color"}
          
    .field#directional-pad
      %button.ui.button.icon.circular.dummy
        %i.icon
      %button.ui.button.icon.circular{name:"up"}
        %i.icon.arrow.alternate.circle.up
      %button.ui.button.icon.circular.dummy
        %i.icon
      %button.ui.button.icon.circular{name:"left"}
        %i.icon.arrow.alternate.circle.left
      %button.ui.button.icon.circular.dummy
        %i.icon
      %button.ui.button.icon.circular{name:"right"}
        %i.icon.arrow.alternate.circle.right
      %button.ui.button.icon.circular.dummy
        %i.icon
      %button.ui.button.icon.circular{name:"down"}
        %i.icon.arrow.alternate.circle.down
      %button.ui.button.icon.circular.dummy
        %i.icon
      
:scss
  html{
    font-size: 18pt; /* Root size */
  }
  
  html, body, .mobile{
    width: 100% !important;
    height: 100% !important;
    overflow: hidden;
  }
  input[type="color"]{
    height: 60px;
  }
  #remote{
    width: 100%;
  }
  .hero{
    padding: 30px;
    height: 100%; 
    width: 100%;
    display: flex;
    flex-flow: column nowrap;
    justify-content: flex-start;
    align-items: center;
  }
  
  #directional-pad{
    display: flex;
    flex-flow: row wrap;
    justify-content: center;
    align-items: center;
    align-content: center;
    width: 100%;
    height: 100%;
    button{
      margin: 0;
      flex-basis: 33.33%;
      height: 90px;
      font-size: 2em;
      &.dummy{
        visibility: hidden;
      }
    }
  }

